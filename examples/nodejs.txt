---------------------0. Let's Get Familiar with Node Modules-------------------

- What is a Node Module: https://www.w3schools.com/nodejs/nodejs_modules.asp

- Node.js HTTP Module: https: //www.w3schools.com/nodejs/nodejs_http.asp

- Node.js File System Module: https://www.w3schools.com/nodejs/nodejs_filesystem.asp

- Node.js URL Module: https://www.w3schools.com/nodejs/nodejs_url.asp

- Node.js Events Module: https://www.w3schools.com/nodejs/nodejs_events.asp

- List of Built-in Node modules: https://www.w3schools.com/nodejs/ref_modules.asp

---------------------1. Let's Send Static Files--------------------------------

var http = require('http');

var fs = require('fs');

var EventEmitter = require("events").EventEmitter;

var htmlFile;
var cssFile;

fs.readFile('./index.html', function(err, data) {
    if (err){
        throw err;
    }
    htmlFile = data;
});

fs.readFile('./index.css', function(err, data) {
    if (err){
        throw err;
    }
    cssFile = data;
});

var ee = new EventEmitter();
ee.on("register", function () {
    console.log("registering new user");
});

var server = http.createServer(function (request, response) {
    if (request.url == "register") {
        ee.emit("register");
    }
    if (request.url == "index.css") {
            response.writeHead(200, {"Content-Type": "text/css"});
            response.write(cssFile);
            break;
    } else {
            response.writeHead(200, {"Content-Type": "text/html"});
            response.write(htmlFile);
    });
    response.end();
}


---------------------2. Let's Request a Big File-------------------------------

var http = require('http');
var fs = require('fs');

var server = http.createServer(function(req, res) {
	console.log('request was made: '+ req.url);
	res.writeHead(200, {"Content-Type": "text/plain"});
	var myReadStream = fs.createReadStream('readme.txt', 'utf8');
	myReadStream.pipe(res);
});

server.listen(3000, '127.0.0.1');
console.log('Now listening on port 3000');


---------------------3. Let's Send Parameters to Server------------------------

var http = require('http');
var url = require('url');
var querystring = require('querystring');

var server = http.createServer(function(req, res) {
    var params = querystring.parse(url.parse(req.url).query);
    res.writeHead(200, {"Content-Type": "text/plain"});
    if ('firstname' in params && 'lastname' in params) {
        res.write('Your name is '+params['firstname']+' '+params['lastname']);
    }
    else {
        res.write(''You do have a first name and a last name, don\'t you?');
    }
    res.end();
});
server.listen(8080);

---------------------4. Let's Build Up a Page----------------------------------

var http = require('http'); 
var server = http.createServer(function(req, res) { 
    res.setHeader('Content-type', 'text/html'); 
    res.writeHead(200); 
    res.write('<!DOCTYPE html>\n'); 
    res.write('<html><head><meta charset="UTF-8" />\n'); 
    res.write('<title>Node.js app</title></head><body>\n'); 
    res.write('<p>This is a page generated by Node.js.</p>\n'); 
    for ( i=1; i<=10; i+=1 ) { 
        res.write('<p>Another paragraph. ' + i + '</p>\n'); 
    } 
    res.write('</body></html>\n'); 
    res.end(); 
}); 
server.listen(8080);

--------------------5. Let's Debug Node.js-------------------------------------

- Run your code (server.js) with this command:   node --inspect-brk index.js
- Open this url (about:inspect) in Chrome
- For more info look at (https://nodejs.org/en/docs/guides/debugging-getting-started/)

====================6. A complete project=======================================

var http = require('http');
var fs = require('fs');
var url = require('url');
var EventEmitter = require("events").EventEmitter;
var querystring = require('querystring');

var htmlFile;
var cssFile;
var htmldata = '<html><head>    <title>Served by node.js</title>    <meta charset="utf-8"/> <link rel="stylesheet" type="text/css" href="index.css">    <script src="https://code.jquery.com/jquery-2.2.4.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=" crossorigin="anonymous"></script> <script type="text/javascript">     var sendit = function(){            var name = $("#name").val();            console.log(name);          $.get("register?name="+name, function(data) {               $("#result").html(data);            });     }   </script></head><body>  <div id="inputs">   <input type="text" id="name"/>  <input type="button" value="Register" onclick="sendit()">   </div>  <div id="result"></div></body></html>';
var cssdata = 'body {   background-color: #dde;}#result {   border: 1px dashed gray;}#inputs, #result{  margin: 5% auto;    width: 25%;}';
var loadFiles = false;

if (loadFiles){
    fs.readFile('index.html', function(err, data) {
        if (err){
            throw err;
        }
        htmlFile = data;
    });
} else {
    htmlFile = htmldata
}

if (loadFiles){
    fs.readFile('index.css', function(err, data) {
        if (err){
            throw err;
        }
        cssFile = data;
    });
} else {
    cssFile = cssdata;
}

var ee = new EventEmitter();
ee.on("register", function (name) {
    console.log("registering new user: "+name);
});

var server = http.createServer(function (request, response) {
    var parsed = url.parse(request.url);
    var params = querystring.parse(parsed.query);
    console.log("Resource requested: "+parsed.pathname)
    if (parsed.pathname == "/register") {
        ee.emit("register", params.name);
        response.write("register successful for "+params.name);
    }
    else if (parsed.pathname == "/index.css") {
        response.writeHead(200, {"Content-Type": "text/css"});
        response.write(cssFile);
    } else if (parsed.pathname == "/favicon.ico") {
        response.writeHead(200, {"Content-Type": "image/x-icon"});
        response.write("");
    } else if (parsed.pathname == "/"){
        response.writeHead(200, {"Content-Type": "text/html"});
        response.write(htmlFile);
    } else {
        console.log("Resource not available");
    }
    response.end();
});

var port = 8080;
var host = '127.0.0.1';
server.listen(port, host);
console.log('Now listening on port ' + port);

===============================================================================